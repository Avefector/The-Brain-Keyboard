import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules';
import cssModulesPlugin from 'esbuild-css-modules-plugin';
import fs from 'fs';

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const renamePlugin = {
	name: 'rename-styles',
	setup(build) {
		build.onEnd(() => {
			const {outfile} = build.initialOptions;
			const outcss = outfile.replace(/\.js$/, '.css');
			const fixcss = outfile.replace(/main\.js$/, 'styles.css');
			if (fs.existsSync(outcss)) {
				console.log('Renaming', outcss, 'to', fixcss);
				fs.renameSync(outcss, fixcss);
			}
		});
	},
};

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['src/surfingIndex.ts'],
	bundle: true,
	plugins: [
		cssModulesPlugin({
			inject: false,
			localsConvention: 'camelCaseOnly', // optional. value could be one of 'camelCaseOnly', 'camelCase', 'dashes', 'dashesOnly', default is 'camelCaseOnly'

			generateScopedName: (name, filename, css) => string, // optional. refer to: https://github.com/madyankin/postcss-modules#generating-scoped-names

			filter: /\.modules?\.css$/i, // Optional. Regex to filter certain CSS files.

			v2: true, // experimental. v2 can bundle images in css, note if set `v2` to true, other options except `inject` will be ignored. and v2 only works with `bundle: true`.
			v2CssModulesOption: { // Optional.
				dashedIndents: false, // Optional. refer to: https://github.com/parcel-bundler/parcel-css/releases/tag/v1.9.0
				/**
				 * Optional. The currently supported segments are:
				 * [name] - the base name of the CSS file, without the extension
				 * [hash] - a hash of the full file path
				 * [local] - the original class name
				 */
				pattern: `surfing_[local]_[hash]`
			}
		}), renamePlugin
	],
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2021',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
}).catch(() => process.exit(1));
